(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{587:function(t,s,a){t.exports=a.p+"assets/img/mysql_tixi_jiegou.4e6950ae.png"},588:function(t,s,a){t.exports=a.p+"assets/img/mysql_jiexi.67882173.png"},589:function(t,s,a){t.exports=a.p+"assets/img/mysql_update_process.c12321b1.png"},590:function(t,s,a){t.exports=a.p+"assets/img/mysql_binlog1.b1f97bd9.png"},591:function(t,s,a){t.exports=a.p+"assets/img/mysql_binlog2.f7aae883.png"},592:function(t,s,a){t.exports=a.p+"assets/img/mysql_pre_read.4740241a.png"},593:function(t,s,a){t.exports=a.p+"assets/img/mysql_buffer_polol_1.cfd23955.png"},594:function(t,s,a){t.exports=a.p+"assets/img/mysql_buffer_polol_2.12108105.png"},595:function(t,s,a){t.exports=a.p+"assets/img/mysql_buffer_polol_3.affae5b9.png"},596:function(t,s,a){t.exports=a.p+"assets/img/mysql_shunxudu.1566d33b.png"},597:function(t,s,a){t.exports=a.p+"assets/img/mysql_hash_index.c54902e3.png"},598:function(t,s,a){t.exports=a.p+"assets/img/mysql_index1.103d6f99.png"},599:function(t,s,a){t.exports=a.p+"assets/img/mysql_index2.69a6ec4a.png"},600:function(t,s,a){t.exports=a.p+"assets/img/mysql_index3.7c46da65.png"},601:function(t,s,a){t.exports=a.p+"assets/img/mysql_index4.b0b1663f.png"},695:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" Mysql")]),t._v(" "),s("h2",{attrs:{id:"_1-mysql的体系结构是什么样子的-一条查询语句它到底是怎么执行的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql的体系结构是什么样子的-一条查询语句它到底是怎么执行的"}},[t._v("#")]),t._v(" 1.Mysql的体系结构是什么样子的（一条查询语句它到底是怎么执行的？）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(587),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_2-查询缓存-query-cache-不好用-废弃了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询缓存-query-cache-不好用-废弃了"}},[t._v("#")]),t._v(" 2.查询缓存(Query Cache)(不好用,废弃了)")]),t._v(" "),s("p",[t._v("MySQL 内部自带了一个缓存模块。默认是关闭的。主要是因为 MySQL 自带的缓存的应用场景有限，第一个是它要求 SQL 语句必须一模一样。第二个是表里面任何一条数据发生变化的时候，这张表所有缓存都会失效。")]),t._v(" "),s("p",[t._v("在 MySQL 5.8 中，查询缓存已经被移除了。")]),t._v(" "),s("h2",{attrs:{id:"_3-语法解析和预处理-parser-preprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-语法解析和预处理-parser-preprocessor"}},[t._v("#")]),t._v(" 3.语法解析和预处理(Parser & Preprocessor)")]),t._v(" "),s("p",[t._v("下一步我们要做什么呢？")]),t._v(" "),s("p",[t._v("假如随便执行一个字符串 fkdljasklf ，服务器报了一个 1064 的错：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[Err] 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fkdljasklf' at line 1\n")])])]),s("p",[t._v("服务器是怎么知道我输入的内容是错误的？")]),t._v(" "),s("p",[t._v("或者，当我输入了一个语法完全正确的 SQL，但是表名不存在，它是怎么发现的？")]),t._v(" "),s("p",[t._v("这个就是 MySQL 的 Parser 解析器和 Preprocessor 预处理模块。")]),t._v(" "),s("p",[t._v("这一步主要做的事情是对 SQL 语句进行词法和语法分析和语义的解析。")]),t._v(" "),s("h4",{attrs:{id:"词法解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法解析"}},[t._v("#")]),t._v(" "),s("strong",[t._v("词法解析")])]),t._v(" "),s("p",[t._v("词法分析就是把一个完整的 SQL 语句打碎成一个个的单词。")]),t._v(" "),s("p",[t._v("比如一个简单的 SQL 语句：")]),t._v(" "),s("p",[t._v("select name from user where id = 1;")]),t._v(" "),s("p",[t._v("它会打碎成 8 个符号，记录每个符号是什么类型，从哪里开始到哪里结束。")]),t._v(" "),s("h4",{attrs:{id:"语法解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法解析"}},[t._v("#")]),t._v(" "),s("strong",[t._v("语法解析")])]),t._v(" "),s("p",[t._v("第二步就是语法分析，语法分析会对 SQL 做一些语法检查，比如单引号有没有闭合，然后根据 MySQL")]),t._v(" "),s("p",[t._v("定义的语法规则，根据 SQL 语句生成一个数据结构。这个数据结构我们把它叫做解析树。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(588),alt:"image.png"}})]),t._v(" "),s("h4",{attrs:{id:"预处理器-preprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预处理器-preprocessor"}},[t._v("#")]),t._v(" "),s("strong",[t._v("预处理器（Preprocessor）")])]),t._v(" "),s("p",[t._v("如果表名错误，会在预处理器处理时报错。")]),t._v(" "),s("p",[t._v("它会检查生成的解析树，解决解析器无法解析的语义。比如，它会检查表和列名是否存在，检查名字和别名，保证没有歧义。")]),t._v(" "),s("h2",{attrs:{id:"_4-查询优化-query-optimizer-与查询执行计划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-查询优化-query-optimizer-与查询执行计划"}},[t._v("#")]),t._v(" 4.查询优化（Query Optimizer）与查询执行计划")]),t._v(" "),s("h3",{attrs:{id:"什么优化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么优化器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("什么优化器？")])]),t._v(" "),s("p",[t._v("问题：一条 SQL 语句是不是只有一种执行方式？或者说数据库最终执行的 SQL 是不是就是我们发送 的 SQL？")]),t._v(" "),s("p",[t._v("这个答案是否定的。一条 SQL 语句是可以有很多种执行方式的。但是如果有这么多种执行方式，这些执行方式怎么得到的？最终选择哪一种去执行？根据什么判断标准去选择？")]),t._v(" "),s("p",[t._v("这个就是 MySQL 的查询优化器的模块（Optimizer）。")]),t._v(" "),s("p",[t._v("查询优化器的目的就是根据解析树生成不同的"),s("strong",[t._v("执行计划")]),t._v("，然后选择一种最优的执行计划，MySQL 里面使用的是基于开销（cost）的优化器，那种执行计划开销最小，就用哪种。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("使用如下命令查看查询的开销：\n    show status like 'Last_query_cost'; \n    --代表需要随机读取几个 4K 的数据页才能完成查找。 \n")])])]),s("p",[t._v("如果我们想知道优化器是怎么工作的，它生成了几种执行计划，每种执行计划的 cost 是多少，应该怎么做？")]),t._v(" "),s("h3",{attrs:{id:"优化器是怎么得到执行计划的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化器是怎么得到执行计划的"}},[t._v("#")]),t._v(" "),s("strong",[t._v("优化器是怎么得到执行计划的？")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://dev.mysql.com/doc/internals/en/optimizer-tracing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dev.mysql.com/doc/internals/en/optimizer-tracing.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("首先我们要启用优化器的追踪（默认是关闭的）：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SHOW VARIABLES LIKE 'optimizer_trace'; \n\nset optimizer_trace=\"enabled=on\"; \n")])])]),s("p",[t._v("注意开启这开关是会消耗性能的，因为它要把优化分析的结果写到表里面，所以不要轻易开启，或者查看完之后关闭它（改成 off）。")]),t._v(" "),s("p",[t._v("接着我们执行一个 SQL 语句，优化器会生成执行计划：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select t.tcid from teacher t,teacher_contact tc where t.tcid = tc.tcid; \n")])])]),s("p",[t._v("这个时候优化器分析的过程已经记录到系统表里面了，我们可以查询：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from information_schema.optimizer_trace\\G \n")])])]),s("p",[t._v("expanded_query 是优化后的 SQL 语句。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("considered_execution_plans 里面列出了所有的执行计划。 \n")])])]),s("p",[t._v("记得关掉它：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("        set optimizer_trace=\"enabled=off\"; \n\n•       SHOW VARIABLES LIKE 'optimizer_trace'; \n")])])]),s("h3",{attrs:{id:"优化器可以做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化器可以做什么"}},[t._v("#")]),t._v(" "),s("strong",[t._v("优化器可以做什么？")])]),t._v(" "),s("p",[t._v("MySQL 的优化器能处理哪些优化类型呢？")]),t._v(" "),s("p",[t._v("比如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、当我们对多张表进行关联查询的时候，以哪个表的数据作为基准表。 \n\n2、select * from user where a=1 and b=2 and c=3，如果 c=3 的结果有 100 条，b=2 的结果有 200 条，\t\ta=1 的结果有 300 条，你觉得会先执行哪个过滤？ \n\n3、如果条件里面存在一些恒等或者恒不等的等式，是不是可以移除。 \n\n4、查询数据，是不是能直接从索引里面取到值。 \n\n5、count()、min()、max()，比如是不是能从索引里面直接取到值。 \n\n6、其他。\n")])])]),s("h3",{attrs:{id:"优化器得到的结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化器得到的结果"}},[t._v("#")]),t._v(" "),s("strong",[t._v("优化器得到的结果")])]),t._v(" "),s("p",[t._v("优化器最终会把解析树变成一个查询执行计划，查询执行计划是一个数据结构。")]),t._v(" "),s("p",[t._v("当然，这个执行计划是不是一定是最优的执行计划呢？不一定，因为 MySQL 也有可能覆盖不到所有的执行计划。")]),t._v(" "),s("p",[t._v("MySQL 提供了一个执行计划的工具。我们在 SQL 语句前面加上 EXPLAIN，就可以看到执行计划的信息。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("EXPLAIN select name from user where id=1; \n")])])]),s("h2",{attrs:{id:"_5-一条更新语句要经历那些流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-一条更新语句要经历那些流程"}},[t._v("#")]),t._v(" 5.一条更新语句要经历那些流程")]),t._v(" "),s("p",[t._v("请问索引会对更新语句生效吗？？？    更新语句的流程是包含了查询语句的流程的")]),t._v(" "),s("p",[s("img",{attrs:{src:a(589),alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"bin-log是什么-有什么用-数据库被人干掉了怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bin-log是什么-有什么用-数据库被人干掉了怎么办"}},[t._v("#")]),t._v(" Bin log是什么，有什么用？（数据库被人干掉了怎么办？）")]),t._v(" "),s("p",[t._v("1.bin Log:     数据恢复   主从复制")]),t._v(" "),s("p",[t._v("MySQL Server 层也有一个日志文件，叫做 binlog，它可以被所有的存储引擎使用。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("bin log 以事件的形式记录了所有的 DDL 和 DML 语句（因为它记录的是操作而不是数据值，属于逻辑日志），可以用来做主从复制和数据恢复。\n\n凌晨1点钟全量备份   程序员  1点---9点钟      10点钟    数据文件全部删掉了   恢复1点钟   恢复到9点钟   \n")])])]),s("p",[s("img",{attrs:{src:a(590),alt:"image.png"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(591),alt:"image.png"}})]),t._v(" "),s("p",[t._v("数据恢复：区别于Redo Log的崩溃恢复，数据恢复是基于业务数据的，比如删库跑路，而崩溃恢复是断电重启的")]),t._v(" "),s("h2",{attrs:{id:"_6-什么是预读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-什么是预读"}},[t._v("#")]),t._v(" 6."),s("strong",[t._v("什么是预读？")])]),t._v(" "),s("p",[t._v("磁盘读写，并不是按需读取，而是按页读取，一次至少读一页数据（操作系统一般是4K）但是Mysql的数据页是16K，如果未来要读取的数据就在页中，就能够省去后续的磁盘IO，提高效率。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(592),alt:"16468182690113011504ffy"}})]),t._v(" "),s("h2",{attrs:{id:"_7-buffer-poll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-buffer-poll"}},[t._v("#")]),t._v(" 7.Buffer Poll")]),t._v(" "),s("h3",{attrs:{id:"什么是buffer-pool-性能优化的一个点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是buffer-pool-性能优化的一个点"}},[t._v("#")]),t._v(" 什么是Buffer  Pool？   性能优化的一个点")]),t._v(" "),s("p",[t._v("Buffer Pool（缓冲区、缓冲池）是MySQL主存中的一个区域。InnoDB在访问表数据时，会将数据从磁盘中拉取到Buffer Pool。而这个数据明面上就是多行数据，其实就是以页(16KB)的形式存在的。他的目的就是为了加快查询和写入的速度。基于官方文档，可以看到，MySQL一般占用服务器的80%左右的内存。")]),t._v(" "),s("p",[t._v("MySQL可以利用缓冲池实现优化的一个点。")]),t._v(" "),s("p",[t._v("缓存表数据与索引数据，把磁盘上的数据加载到缓冲池，避免每次访问都进行磁盘IO，起到加速访问的作用。\n"),s("img",{attrs:{src:a(593),alt:"16468182690113014280ffy"}})]),t._v(" "),s("h3",{attrs:{id:"buffer-pool的内存淘汰策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffer-pool的内存淘汰策略"}},[t._v("#")]),t._v(" Buffer Pool的内存淘汰策略")]),t._v(" "),s("p",[t._v("Buffer Pool毕竟是存在在内存里面的，内存空间有限，所以无法将所有数据都扔进来，需要提供一些机制实现内存淘汰的策略。")]),t._v(" "),s("p",[t._v("存储结构是将整个Buffer Pool分为了两大块区域。")]),t._v(" "),s("ul",[s("li",[t._v("New SubList：占用Buffer Pool的5/8的大小")]),t._v(" "),s("li",[t._v("Old SubList：占用Buffer Pool的3/8的大小")])]),t._v(" "),s("p",[t._v("内部的数据都是页，页直接是基于 "),s("strong",[t._v("链表连接")]),t._v(" 的。")]),t._v(" "),s("p",[t._v("其次关于数据写入和淘汰的策略其实也很简单，他使用的机制是 "),s("strong",[t._v("LRU")]),t._v(" （最近最少使用的就被干掉！）")]),t._v(" "),s("p",[t._v("当需要将从磁盘中获取的页存储到Buffer Pool时，会先将这个页的数据存放到Old SubList的head位置。")]),t._v(" "),s("p",[t._v("当某个页的数据被操作（读写）了，就会放到New SubList的head位置。")]),t._v(" "),s("p",[t._v("如果某个页没有被操作（读写），慢慢的就会被放到Old SubList的tail位置。")]),t._v(" "),s("p",[t._v("当我需要再次将一个新的页，存放到Buffer Pool时，如果空间不足，会将Old SubList的tail位置的页淘汰掉")]),t._v(" "),s("p",[s("img",{attrs:{src:a(594),alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("数据页第一次加载进来，放在LRU链表的什么地方？")])]),t._v(" "),s("p",[t._v("放在冷数据区域的头部")]),t._v(" "),s("p",[s("strong",[t._v("冷数据区域的缓存页什么时候放入热数据区域？")])]),t._v(" "),s("p",[t._v("MySQL设定了一个规则，在 innodb_old_blocks_time 参数中，默认值为1000，也就是1000毫秒。")]),t._v(" "),s("p",[t._v("意味着，只有把数据页加载进缓存里，在经过1s之后再次对此缓存页进行访问才会将缓存页放到LRU链表热数据区域的头部。")]),t._v(" "),s("p",[s("strong",[t._v("为什么是1秒？")])]),t._v(" "),s("p",[t._v("因为通过预读机制和全表扫描加载进来的数据页通常是1秒内就加载了很多，然后对他们访问一下，这些都是1秒内完成，他们会存放在冷数据区域等待刷盘清空，基本上不太会有机会放入到热数据区域，除非在1秒后还有人访问，说明后续可能还会有人访问，才会放入热数据区域的头部。")]),t._v(" "),s("h3",{attrs:{id:"redo-log跟buffer-pool的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redo-log跟buffer-pool的关系"}},[t._v("#")]),t._v(" Redo Log跟Buffer Pool的关系")]),t._v(" "),s("p",[t._v("崩溃恢复  基本保障   系统自动做的")]),t._v(" "),s("blockquote",[s("p",[t._v("InnoDB 引入了一个日志文件，叫做 redo log（重做日志），我们把所有对内存数据的修改操作写入日志文件，如果服务器出问题了，我们就从这个日志文件里面读取数据，恢复数据——用它来实现事务的持久性。")]),t._v(" "),s("p",[t._v("redo log 有什么特点？")]),t._v(" "),s("p",[t._v("1.记录修改后的值，属于物理日志")]),t._v(" "),s("p",[t._v("2.redo log 的大小是固定的，前面的内容会被覆盖，所以不能用于数据回滚/数据恢复。")]),t._v(" "),s("p",[t._v("3.redo log 是 InnoDB 存储引擎实现的，并不是所有存储引擎都有。")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(595),alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"buffer-pool的线程问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffer-pool的线程问题"}},[t._v("#")]),t._v(" Buffer Pool的线程问题？")]),t._v(" "),s("p",[t._v("Buffer Pool是整个MySQL在InnoDB中的一个共享的内存区域，多个线程在和MySQL交互时，都会操作这个Buffer Pool的结构，会出现多线程操作临界资源（共享东西~），可能会有线程安全问题。")]),t._v(" "),s("p",[t._v("因为每次操作Buffer Pool中的页时，都需要将页的位置做一些移动，如果多个线程同时移动，可能会导致指针出问题。")]),t._v(" "),s("p",[t._v("即便这种内存动指针的操作贼快，甚至可能就是毫秒甚至是微秒级别的，但是依然存在问题。")]),t._v(" "),s("p",[t._v("所以线程在操作Buffer Pool时，需要基于锁的形式，拿到锁之后，才能去动Buffer Pool中的页……")]),t._v(" "),s("p",[t._v("So，"),s("strong",[t._v("Buffer Pool其实是可以支持多实例的")]),t._v("。MySQL支持的。")]),t._v(" "),s("p",[t._v("MySQL中可以基于参数 "),s("code",[t._v("innodb_buffer_pool_instances")]),t._v(" 去设置Buffer Pool实例的个数，默认是一个，最大可以设置为64个。并且多Buffer Pool实例需要至少给Buffer Pool设置1G的空闲才会生效。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/2746/1725536056014/9c561fec5ff84eb4914dd084130ac7fb.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("他是将数据基于hash的形式，分散到不同的Buffer Pool实例中。多个Buffer Pool的数据是不同的！！")]),t._v(" "),s("h2",{attrs:{id:"_8-为什么mysql要使用b-树做为索引-b树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-为什么mysql要使用b-树做为索引-b树"}},[t._v("#")]),t._v(" 8.为什么Mysql要使用B+树做为索引     B树")]),t._v(" "),s("ol",[s("li",[t._v("B+树能显著减少IO次数，提高效率")]),t._v(" "),s("li",[t._v("B+树的查询效率更加稳定，因为数据放在叶子节点")]),t._v(" "),s("li",[t._v("B+树能提高范围查询的效率，因为叶子节点指向下一个叶子节点")]),t._v(" "),s("li",[t._v("B+树采取顺序读")])]),t._v(" "),s("h2",{attrs:{id:"_9-磁盘的顺序读以及随机读有什么区别-这个在面大厂的时候有可能会让你聊-问法有很多种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-磁盘的顺序读以及随机读有什么区别-这个在面大厂的时候有可能会让你聊-问法有很多种"}},[t._v("#")]),t._v(" 9.磁盘的顺序读以及随机读有什么区别？（这个在面大厂的时候有可能会让你聊，问法有很多种）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(596),alt:"image.png"}})]),t._v(" "),s("p",[t._v("1.盘片")]),t._v(" "),s("p",[t._v("2.磁头")]),t._v(" "),s("p",[t._v("3.主轴")]),t._v(" "),s("p",[t._v("4.集成电路板")]),t._v(" "),s("p",[t._v("磁盘是如何完成单次IO的")]),t._v(" "),s("p",[t._v("单次的IO时间 =   寻道时间 + 旋转延迟 + 传送时间")]),t._v(" "),s("h2",{attrs:{id:"_10-什么是hash索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-什么是hash索引"}},[t._v("#")]),t._v(" 10.什么是Hash索引")]),t._v(" "),s("p",[s("img",{attrs:{src:a(597),alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"_11-索引使用原则-索引怎么使用才合理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-索引使用原则-索引怎么使用才合理"}},[t._v("#")]),t._v(" 11."),s("strong",[t._v("索引使用原则（索引怎么使用才合理）")])]),t._v(" "),s("p",[t._v("我们容易有一个误区，就是在经常使用的查询条件上都建立索引，索引越多越好，那到底是不是这样呢？")]),t._v(" "),s("h3",{attrs:{id:"列的离散-san-度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列的离散-san-度"}},[t._v("#")]),t._v(" "),s("strong",[t._v("列的离散（sàn）度")])]),t._v(" "),s("p",[t._v("第一个叫做列的离散度，我们先来看一下列的离散度的公式：")]),t._v(" "),s("p",[t._v("不同值得数量：总行数 越接近1 那么离散度越高，越接近0，离散度越低")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("count(distinct(column_name)) : count(*)，列的全部不同值和所有数据行的比例。数据行数相同的情况下，分子越大，列的离散度就越高。\n")])])]),s("h3",{attrs:{id:"联合索引最左匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合索引最左匹配"}},[t._v("#")]),t._v(" "),s("strong",[t._v("联合索引最左匹配")])]),t._v(" "),s("p",[t._v("前面我们说的都是针对单列创建的索引，但有的时候我们的多条件查询的时候，也会建立联合索引，举例：查询成绩的时候必须同时输入身份证和考号。")]),t._v(" "),s("p",[t._v("联合索引在 B+Tree 中是复合的数据结构，它是按照从左到右的顺序来建立搜索树的（name 在左边，phone 在右边）。")]),t._v(" "),s("p",[t._v("从这张图可以看出来，name 是有序的，phone 是无序的。当 name 相等的时候，phone 才是有序的。\n"),s("img",{attrs:{src:a(598),alt:"image.png"}}),t._v("\n这个时候我们使用 where name= 'jim' and phone = '136xx '去查询数据的时候，B+Tree 会优先比较 name 来确定下一步应该搜索的方向，往左还是往右。如果 name相同的时候再比较 phone。但是如果查询条件没有 name，就不知道第一步应该查哪个节点，因为建立搜索树的时候 name 是第一个比较因子，所以用不到索引。")]),t._v(" "),s("h3",{attrs:{id:"如何创建联合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何创建联合索引"}},[t._v("#")]),t._v(" "),s("strong",[t._v("如何创建联合索引")])]),t._v(" "),s("p",[t._v("有一天我们的 DBA 找到我，说我们的项目里面有两个查询很慢，按照我们的想法，一个查询创建一个索引，所以我们针对这两条 SQL 创建了两个索引，这种做法觉得正确吗？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("CREATE INDEX idx_name on user_innodb(name); \nCREATE INDEX idx_name_phone on user_innodb(name,phone);\n")])])]),s("p",[t._v("当我们创建一个联合索引的时候，按照最左匹配原则，用左边的字段 name 去查询的时候，也能用到索引，所以第一个索引完全没必要。")]),t._v(" "),s("p",[t._v("相当于建立了两个联合索引(name),(name,phone)。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果我们创建三个字段的索引 index(a,b,c)，相当于创建三个索引：\n\nindex(a) \n\nindex(a,b) \n\nindex(a,b,c) \n\n用 where b=? 和 where b=? and c=? 是不能使用到索引的。\n\n这里就是 MySQL 里面联合索引的最左匹配原则。 \n")])])]),s("h3",{attrs:{id:"覆盖索引与回表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引与回表"}},[t._v("#")]),t._v(" "),s("strong",[t._v("覆盖索引与回表")])]),t._v(" "),s("p",[t._v("什么叫回表：   不需要回表  叫覆盖索引")]),t._v(" "),s("p",[t._v("聚集索引 ：id")]),t._v(" "),s("p",[t._v("二级索引  ：name")]),t._v(" "),s("p",[s("img",{attrs:{src:a(599),alt:"image.png"}})]),t._v(" "),s("p",[t._v("非主键索引，我们先通过索引找到主键索引的键值，再通过主键值查出索引里面没")]),t._v(" "),s("p",[t._v("有的数据，它比基于主键索引的查询多扫描了一棵索引树，这个过程就叫回表。")]),t._v(" "),s("p",[t._v("在辅助索引里面，不管是单列索引还是联合索引，如果 select 的数据列只用从索引中就能够取得，不必从数据区中读取，这时候使用的索引就叫做覆盖索引，这样就避免了回表。")]),t._v(" "),s("p",[t._v("Extra 里面值为“Using index”代表使用了覆盖索引。")]),t._v(" "),s("h2",{attrs:{id:"_12-索引的创建与使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-索引的创建与使用"}},[t._v("#")]),t._v(" "),s("strong",[t._v("12.")]),t._v(" "),s("strong",[t._v("索引的创建与使用")])]),t._v(" "),s("p",[t._v("因为索引对于改善查询性能的作用是巨大的，所以我们的目标是尽量使用索引。")]),t._v(" "),s("h3",{attrs:{id:"在什么字段上索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在什么字段上索引"}},[t._v("#")]),t._v(" "),s("strong",[t._v("在什么字段上索引？")])]),t._v(" "),s("p",[t._v("1、在用于 where 判断 order 排序和 join 的（on）字段上创建索引")]),t._v(" "),s("p",[t._v("2、索引的个数不要过多。")]),t._v(" "),s("p",[t._v("——浪费空间，更新变慢。")]),t._v(" "),s("p",[t._v("3、区分度低的字段，例如性别，不要建索引。")]),t._v(" "),s("p",[t._v("——离散度太低，导致扫描行数过多。")]),t._v(" "),s("p",[t._v("4、频繁更新的值，不要作为主键或者索引。")]),t._v(" "),s("p",[t._v("——页分裂")]),t._v(" "),s("p",[t._v("5、随机无序的值，不建议作为主键索引，例如身份证、UUID。")]),t._v(" "),s("p",[t._v("——无序，分裂")]),t._v(" "),s("p",[t._v("6、创建复合索引，而不是修改单列索引")]),t._v(" "),s("h3",{attrs:{id:"什么时候索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么时候索引失效"}},[t._v("#")]),t._v(" "),s("strong",[t._v("什么时候索引失效？")])]),t._v(" "),s("p",[t._v("1、索引列上使用函数（replace\\SUBSTR\\CONCAT\\sum count avg）、表达式")]),t._v(" "),s("p",[t._v("2、字符串不加引号，出现隐式转换")]),t._v(" "),s("p",[t._v("3、like 条件中前面带%")]),t._v(" "),s("p",[t._v("4、负向查询   NOT LIKE 不能")]),t._v(" "),s("p",[s("strong",[t._v("## MyiSAM与Innodb")])]),t._v(" "),s("p",[t._v("myi     index")]),t._v(" "),s("p",[t._v("myd     data")]),t._v(" "),s("p",[s("img",{attrs:{src:a(600),alt:"image.png"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(601),alt:"image.png"}})]),t._v(" "),s("p",[t._v("我们表内的数据是按照聚集索引的顺序排列的")]),t._v(" "),s("h2",{attrs:{id:"_13-事务的四大特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-事务的四大特性"}},[t._v("#")]),t._v(" 13.事务的四大特性")]),t._v(" "),s("p",[t._v("A账户   10000    -2000   8000+2000=10000    8000+2000   写入buffer  Pool（内存缓冲池）  Redo  Log 环形日志   磁盘")]),t._v(" "),s("p",[t._v("B账户   5000   +2000    7000")]),t._v(" "),s("h3",{attrs:{id:"原子性-atomicity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原子性-atomicity"}},[t._v("#")]),t._v(" "),s("strong",[t._v("原子性（Atomicity）")])]),t._v(" "),s("p",[t._v("也就是我们刚才说的不可再分，也就意味着我们对数据库的一系列的操作，要么都是成功，要么都是失败，不可能出现部分成功或者部分失败的情况，以刚才提到的转账的场景为例，一个账户的余额减少，对应一个账户的增加，这两个一定是同时成功或者同时失败的。全部成功比较简单，问题是如果前面一个操作已经成功了，后面的操作失败了，怎么让它全部失败呢？这个时候我们必须要回滚。")]),t._v(" "),s("p",[t._v("原子性，在 InnoDB 里面是通过 undo log （回滚日志，撤销日志）来实现的，它记录了数据修改之前的值（逻辑日志），一旦发生异常，就可以用 undo log 来实现回滚操作。")]),t._v(" "),s("h3",{attrs:{id:"一致性-consistent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一致性-consistent"}},[t._v("#")]),t._v(" "),s("strong",[t._v("一致性（consistent）")])]),t._v(" "),s("p",[t._v("指的是数据库的完整性约束没有被破坏，事务执行的前后都是合法的数据状态。比如主键必须是唯一的，字段长度符合要求。")]),t._v(" "),s("p",[t._v("除了数据库自身的完整性约束，还有一个是用户自定义的完整性。")]),t._v(" "),s("p",[s("strong",[t._v("举例：")])]),t._v(" "),s("p",[t._v("1.比如说转账的这个场景，A 账户余额减少 1000，B 账户余额只增加了 500，这个时候因为两个操作都成功了，按照我们对原子性的定义，它是满足原子性的， 但是它没有满足一致性，因为它导致了会计科目的不平衡。")]),t._v(" "),s("p",[t._v("2.还有一种情况，A 账户余额为 0，如果这个时候转账成功了，A 账户的余额会变成-1000，虽然它满足了原子性的，但是我们知道，借记卡的余额是不能够小于 0 的，所以也违反了一致性。用户自定义的完整性通常要在代码中控制。")]),t._v(" "),s("h3",{attrs:{id:"隔离性-isolation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隔离性-isolation"}},[t._v("#")]),t._v(" "),s("strong",[t._v("隔离性（isolation）")])]),t._v(" "),s("p",[t._v("有了事务的定义以后，在数据库里面会有很多的事务同时去操作我们的同一张表或者同一行数据，必然会产生一些并发或者干扰的操作，对隔离性就是这些很多个的事务，对表或者 行的并发操作，应该是透明的，互相不干扰的。通过这种方式，我们最终也是保证业务数据的一致性。")]),t._v(" "),s("h3",{attrs:{id:"持久性-durable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久性-durable"}},[t._v("#")]),t._v(" "),s("strong",[t._v("持久性（Durable）")])]),t._v(" "),s("p",[t._v("我们对数据库的任意的操作，增删改，只要事务提交成功，那么结果就是永久性的，不可能因为我们重启了数据库的服务器，它又恢复到原来的状态了。     Redo   Log   二阶段提交的")]),t._v(" "),s("p",[t._v("持久性怎么实现呢？数据库崩溃恢复（crash-safe）是通过什么实现的？持久性是通过 redo log 来实现的，我们操作数据的时候，会先写到内存的 buffer pool 里面，同时记录 redo log，如果在刷盘之前出现异常，在重启后就可以读取 redo log的内容，写入到磁盘，保证数据的持久性。")]),t._v(" "),s("p",[t._v("总结：原子性，隔离性，持久性，最后都是为了实现一致性")]),t._v(" "),s("h2",{attrs:{id:"_14-事务并发会带来什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-事务并发会带来什么问题"}},[t._v("#")]),t._v(" 14.事务并发会带来什么问题？")]),t._v(" "),s("p",[t._v("当很多事务并发地去操作数据库的表或者行的时候，如果没有我们刚才讲的事务的Isolation 隔离性的时候，会带来哪些问题呢？")]),t._v(" "),s("h3",{attrs:{id:"脏读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脏读"}},[t._v("#")]),t._v(" "),s("strong",[t._v("脏读")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/4bb1fffb1e154ebb804e4a0655a7f988.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("大家看一下，我们有两个事务，一个是 Transaction A，一个是 Transaction B，在第一个事务里面，它首先通过一个 where id=1 的条件查询一条数据，返回 name=Ada，age=16 的这条数据。然后第二个事务呢，它同样地是去操作 id=1 的这行数据，它通过一个 update 的语句，把这行 id=1 的数据的 age 改成了 18，但是大家注意，它没有提交。")]),t._v(" "),s("p",[t._v("这个时候，在第一个事务里面，它再次去执行相同的查询操作，发现数据发生了变化，获取到的数据 age 变成了 18。那么，这种在一个事务里面，由于其他的时候修改了数据并且没有提交，而导致了前后两次读取数据不一致的情况，这种事务并发的问题，我们把它定义成脏读。")]),t._v(" "),s("h3",{attrs:{id:"不可重复读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不可重复读"}},[t._v("#")]),t._v(" "),s("strong",[t._v("不可重复读")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/de52616964874baa81b0943efbbf37c2.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("同样是两个事务，第一个事务通过 id=1 查询到了一条数据。然后在第二个事务里面执行了一个 update 操作，这里大家注意一下，执行了 update 以后它通过一个 commit提交了修改。然后第一个事务读取到了其他事务已提交的数据导致前后两次读取数据不一致的情况，就像这里，age 到底是等于 16 还是 18，那么这种事务并发带来的问题，我们把它叫做不可重复读。\n")])])]),s("h3",{attrs:{id:"幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幻读"}},[t._v("#")]),t._v(" "),s("strong",[t._v("幻读")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在第一个事务里面我们执行了一个范围查询，这个时候满足条件的数据只有一条。在第二个事务里面，它插入了一行数据，并且提交了。重点：插入了一行数据。在第一个事务里面再去查询的时候，它发现多了一行数据。\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/5788f65448664d26b11b8e7dfc14bd30.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一个事务前后两次读取数据数据不一致，是由于其他事务插入数据造成的，这种情况我们把它叫做幻读。\n")])])]),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" "),s("strong",[t._v("总结：")])]),t._v(" "),s("p",[t._v("不可重复读是修改或者删除，幻读是插入。")]),t._v(" "),s("p",[t._v("无论是脏读，还是不可重复读，还是幻读，它们都是数据库的读一致性的问题，都是在一个事务里面前后两次读取出现了不一致的情况。")]),t._v(" "),s("h2",{attrs:{id:"_15-如何解决数据的读一致性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-如何解决数据的读一致性问题"}},[t._v("#")]),t._v(" 15.如何解决数据的读一致性问题")]),t._v(" "),s("p",[t._v("两大方案:")]),t._v(" "),s("h3",{attrs:{id:"lbcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lbcc"}},[t._v("#")]),t._v(" "),s("strong",[t._v("LBCC")])]),t._v(" "),s("p",[t._v("第一种，既然要保证前后两次读取数据一致，那么读取数据的时候，锁定我要操作的数据，不允许其他的事务修改就行了。这种方案叫做基于锁的并发控制 Lock Based  Concurrency Control（LBCC）。")]),t._v(" "),s("p",[t._v("如果仅仅是基于锁来实现事务隔离，一个事务读取的时候不允许其他时候修改，那就意味着不支持并发的读写操作，而我们的大多数应用都是读多写少的，这样会极大地影响操作数据的效率。")]),t._v(" "),s("h3",{attrs:{id:"mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvcc"}},[t._v("#")]),t._v(" "),s("strong",[t._v("MVCC")])]),t._v(" "),s("p",[t._v("https://dev.mysql.com/doc/refman/5.7/en/innodb-multi-versioning.html")]),t._v(" "),s("p",[t._v("另一种解决方案，如果要让一个事务前后两次读取的数据保持一致，那么我们可以在修改数据的时候给它建立一个备份或者叫快照，后面再来读取这个快照就行了。这种方案我们叫做多版本的并发控制 Multi Version Concurrency Control（MVCC）")]),t._v(" "),s("p",[t._v("MVCC 的核心思想是： 我可以查到在我这个事务开始之前已经存在的数据，即使它在后面被修改或者删除了。在我这个事务之后新增的数据，我是查不到的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/f1ac9b56aafe4ec2980b75d9235613c8.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("通过以上演示我们能看到，通过版本号的控制，无论其他事务是插入、修改、删除，第一个事务查询到的数据都没有变化。")]),t._v(" "),s("p",[t._v("在 InnoDB 中，MVCC 是通过 Undo log 实现的。")]),t._v(" "),s("p",[t._v("Oracle、Postgres 等等其他数据库都有 MVCC 的实现。")]),t._v(" "),s("p",[t._v("需要注意，在 InnoDB 中，MVCC 和锁是协同使用的来实现隔离性的，这两种方案并不是互斥的。")]),t._v(" "),s("p",[t._v("第一大类解决方案是锁，锁又是怎么实现读一致性的呢？")]),t._v(" "),s("h2",{attrs:{id:"_16-mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-mvcc"}},[t._v("#")]),t._v(" 16.MVCC")]),t._v(" "),s("h3",{attrs:{id:"mvcc为什么不能完全解决幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvcc为什么不能完全解决幻读"}},[t._v("#")]),t._v(" MVCC为什么不能完全解决幻读")]),t._v(" "),s("p",[t._v("MVCC（多版本并发控制）通过快照读机制实现可重复读隔离级别，但其设计特性决定了无法彻底消除幻读问题，具体表现如下：")]),t._v(" "),s("h4",{attrs:{id:"_1-快照读与当前读的隔离性差异‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-快照读与当前读的隔离性差异‌"}},[t._v("#")]),t._v(" 1. "),s("strong",[t._v("快照读与当前读的隔离性差异")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("快照读")]),t._v("‌ （如普通SELECT）基于事务开始时创建的Read View，仅读取历史版本数据，可屏蔽其他事务的插入操作‌。")]),t._v(" "),s("li",[s("strong",[t._v("当前读")]),t._v("‌ （如带锁的SELECT FOR UPDATE、INSERT/UPDATE/DELETE操作）直接读取最新提交数据，若其他事务在两次查询之间插入新数据，仍会导致幻读‌。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("‌ ：事务A首次快照读未命中某条件，事务B插入符合该条件的数据并提交，事务A执行当前读时会读取到新数据，导致幻读‌。")])]),t._v(" "),s("h4",{attrs:{id:"_2-范围查询的边界漏洞‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-范围查询的边界漏洞‌"}},[t._v("#")]),t._v(" 2. "),s("strong",[t._v("范围查询的边界漏洞")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[t._v("MVCC对单行数据的版本控制有效，但在 "),s("strong",[t._v("范围查询")]),t._v("‌ （如 "),s("code",[t._v("WHERE id > 100")]),t._v("）场景中，事务无法感知其他事务在查询范围内插入的新行‌。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("‌ ：事务A查询 "),s("code",[t._v("id > 100")]),t._v("的记录（快照读），事务B插入 "),s("code",[t._v("id=200")]),t._v("并提交，事务A再次执行相同查询（当前读）会包含新插入的 "),s("code",[t._v("id=200")]),t._v("‌。")])]),t._v(" "),s("h4",{attrs:{id:"_3-插入操作无历史版本依赖‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-插入操作无历史版本依赖‌"}},[t._v("#")]),t._v(" 3. "),s("strong",[t._v("插入操作无历史版本依赖")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[t._v("MVCC依赖数据行的版本链回溯历史，但"),s("strong",[t._v("新插入的行")]),t._v("‌没有历史版本，其他事务的插入操作会绕过MVCC的快照隔离机制‌。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("‌ ：事务A未开启间隙锁时，事务B插入新行并提交，事务A即使处于RR隔离级别，仍可能通过当前读感知到新行‌。")])]),t._v(" "),s("h4",{attrs:{id:"_4-隔离级别与锁机制的依赖‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-隔离级别与锁机制的依赖‌"}},[t._v("#")]),t._v(" 4. "),s("strong",[t._v("隔离级别与锁机制的依赖")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[t._v("在MySQL的RR隔离级别下，"),s("strong",[t._v("间隙锁（Gap Lock）")]),t._v(" ‌才是彻底解决幻读的关键，而非MVCC本身。MVCC仅通过快照读减少锁冲突，但无法阻止其他事务插入新数据‌。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("‌：若事务A未对查询范围加间隙锁，事务B仍可插入新数据，导致事务A后续操作出现幻读‌。")])]),t._v(" "),s("p",[t._v("10    20     30    40")]),t._v(" "),s("p",[s("strong",[t._v("出现幻读的案例：")])]),t._v(" "),s("h4",{attrs:{id:"案例一-快照读与当前读混合引发的幻读‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例一-快照读与当前读混合引发的幻读‌"}},[t._v("#")]),t._v(" "),s("strong",[t._v("案例一：快照读与当前读混合引发的幻读")]),t._v("‌")]),t._v(" "),s("p",[s("strong",[t._v("场景复现")]),t._v("‌")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("事务A（可重复读隔离级别）")]),t._v(" ‌\n"),s("ul",[s("li",[s("strong",[t._v("T1")]),t._v("‌ ：执行快照读 "),s("code",[t._v("SELECT * FROM book WHERE id > 100")]),t._v(" → 结果为空（基于事务开始时的Read View）‌。")]),t._v(" "),s("li",[s("strong",[t._v("T2")]),t._v("‌：事务B插入一条 "),s("code",[t._v("id=200")]),t._v(" 的数据并提交。")]),t._v(" "),s("li",[s("strong",[t._v("T3")]),t._v("‌ ：事务A执行当前读 "),s("code",[t._v("SELECT * FROM book WHERE id > 100 FOR UPDATE")]),t._v(" → 结果包含 "),s("code",[t._v("id=200")]),t._v("（直接读取最新提交数据）‌。")])])])]),t._v(" "),s("p",[s("strong",[t._v("结论")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[t._v("MVCC通过快照读屏蔽了事务B插入的新数据（T1结果为空），但当前读（如 "),s("code",[t._v("FOR UPDATE")]),t._v("）会绕过MVCC，直接读取最新数据，导致事务A感知到新插入的 "),s("code",[t._v("id=200")]),t._v("，产生幻读‌。")])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"案例二-无间隙锁保护的范围查询‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例二-无间隙锁保护的范围查询‌"}},[t._v("#")]),t._v(" "),s("strong",[t._v("案例二：无间隙锁保护的范围查询")]),t._v("‌")]),t._v(" "),s("p",[s("strong",[t._v("场景复现")]),t._v("‌")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("事务A（可重复读隔离级别）")]),t._v(" ‌\n"),s("ul",[s("li",[s("strong",[t._v("T1")]),t._v("‌ ：快照读 "),s("code",[t._v("SELECT * FROM book WHERE id BETWEEN 100 AND 300")]),t._v(" → 结果为空。")]),t._v(" "),s("li",[s("strong",[t._v("T2")]),t._v("‌ ：事务B插入 "),s("code",[t._v("id=150")]),t._v(" 并提交。")]),t._v(" "),s("li",[s("strong",[t._v("T3")]),t._v("‌ ：事务A执行更新操作 "),s("code",[t._v("UPDATE book SET name='test' WHERE id BETWEEN 100 AND 300")]),t._v(" → 更新语句触发当前读，实际修改了事务B插入的 "),s("code",[t._v("id=150")]),t._v("‌。")])])])]),t._v(" "),s("p",[t._v("=‌"),s("strong",[t._v("结论")]),t._v("‌=")]),t._v(" "),s("ul",[s("li",[t._v("MVCC在快照读时未感知新插入的 "),s("code",[t._v("id=150")]),t._v("，但事务A后续的更新操作（当前读）会操作新数据，导致逻辑冲突。若事务A未对查询范围加间隙锁，MVCC无法阻止新数据的插入‌。")])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"案例三-插入操作绕过mvcc版本链‌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例三-插入操作绕过mvcc版本链‌"}},[t._v("#")]),t._v(" "),s("strong",[t._v("案例三：插入操作绕过MVCC版本链")]),t._v("‌")]),t._v(" "),s("p",[s("strong",[t._v("场景复现")]),t._v("‌")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("事务A（可重复读隔离级别）")]),t._v(" ‌\n"),s("ul",[s("li",[s("strong",[t._v("T1")]),t._v("‌ ：快照读 "),s("code",[t._v("SELECT * FROM book WHERE name='java'")]),t._v(" → 结果为空。")]),t._v(" "),s("li",[s("strong",[t._v("T2")]),t._v("‌ ：事务B插入 "),s("code",[t._v("name='java'")]),t._v(" 的新记录并提交。")]),t._v(" "),s("li",[s("strong",[t._v("T3")]),t._v("‌ ：事务A执行插入操作 "),s("code",[t._v("INSERT INTO book (name) VALUES ('java')")]),t._v(" → 触发主键冲突（因事务B已插入相同数据）‌。")])])])]),t._v(" "),s("p",[s("strong",[t._v("结论")]),t._v("‌")]),t._v(" "),s("ul",[s("li",[t._v("MVCC的快照读未感知事务B的插入操作，但事务A的插入操作需校验唯一约束（如主键），此时直接读取最新数据，发现冲突。新插入数据无历史版本，MVCC无法通过版本链回溯规避此问题‌。")])]),t._v(" "),s("p",[t._v("结论：")]),t._v(" "),s("p",[t._v("MVCC通过快照读解决了不可重复读和部分幻读问题，但"),s("strong",[t._v("无法完全消除幻读的根本原因")]),t._v("‌在于：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("当前读与快照读的混合使用")]),t._v("‌导致数据可见性差异‌；")]),t._v(" "),s("li",[s("strong",[t._v("新插入数据无历史版本")]),t._v("‌ ，直接绕过MVCC隔离机制‌；")]),t._v(" "),s("li",[s("strong",[t._v("范围查询的天然漏洞")]),t._v("‌=需依赖锁机制（如间隙锁）弥补‌。")])]),t._v(" "),s("p",[t._v("实际生产中，需结合 "),s("strong",[t._v("间隙锁+MVCC")]),t._v("‌=（如MySQL RR隔离级别）或提升至"),s("strong",[t._v("串行化隔离级别")]),t._v("‌ ，才能完全规避幻读‌")]),t._v(" "),s("h2",{attrs:{id:"_17-如何分析执行计划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-如何分析执行计划"}},[t._v("#")]),t._v(" 17.如何分析执行计划")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/explain-output.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dev.mysql.com/doc/refman/5.7/en/explain-output.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。")]),t._v(" "),s("p",[t._v("我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("cid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("cname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tcid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" teacher_contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher_contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tcid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8mb4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jvm'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'juc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spring'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bobo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'老严'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dahai'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher_contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13688888888'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher_contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18166669999'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher_contact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'17722225555'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("explain 的结果有很多的字段，我们详细地分析一下。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("先确认一下环境：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%engine%'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"_4-3-1-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-id"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.1")]),t._v(" "),s("strong",[t._v("id")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("id 是查询序列编号。\n")])])]),s("p",[s("strong",[t._v("id 值不同")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("id 值不同的时候，先查询 id 值大的（先大后小）。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询 mysql 课程的老师手机号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\ttc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\tteacher_contact tc \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\ttcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tcid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" course c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("查询顺序：course c——teacher t——teacher_contact tc。\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/d593586ff586400981f2adb63bcbc289.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("先查课程表，再查老师表，最后查老师联系方式表。子查询只能以这种方式进行，只有拿到内层的结果之后才能进行外层的查询。\n")])])]),s("p",[s("strong",[t._v("id 值相同（从上往下）")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询课程 ID 为 2，或者联系表 ID 为 3 的老师 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\tt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\tteacher t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcourse c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tteacher_contact tc \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\tt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid \n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid \n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/49d0ecd8f4574e78becc64f0cd936b38.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("id 值相同时，表的查询顺序是\n")])])]),s("p",[s("strong",[t._v("从上往下")]),t._v("顺序执行。例如这次查询的 id 都是 1，查询的顺序是 teacher t（3 条）——course c（4 条）——teacher_contact tc（3 条）。")]),t._v(" "),s("p",[s("strong",[t._v("既有相同也有不同")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果 ID 有相同也有不同，就是 ID 不同的先大后小，ID 相同的从上往下。\n")])])]),s("h5",{attrs:{id:"_4-3-2-select-type-查询类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-select-type-查询类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.2")]),t._v(" "),s("strong",[t._v("select type")]),t._v(" "),s("strong",[t._v("查询类型")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("这里并没有列举全部（其它：DEPENDENT UNION、DEPENDENT SUBQUERY、MATERIALIZED、UNCACHEABLE SUBQUERY、UNCACHEABLE UNION）。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("下面列举了一些常见的查询类型：\n")])])]),s("p",[s("strong",[t._v("SIMPLE")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("简单查询，不包含子查询，不包含关联查询 union。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/47db5e81facc4838ba5900e0ce4de10a.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("再看一个包含子查询的案例：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询 mysql 课程的老师手机号 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\ttc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\tteacher_contact tc \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\ttcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tcid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" course c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/760600fe47e94f8ab13b3b07b260ff48.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("PRIMARY")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("子查询 SQL 语句中的主查询，也就是最外面的那层查询。\n")])])]),s("p",[s("strong",[t._v("SUBQUERY")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("子查询中所有的内层查询都是 SUBQUERY 类型的。\n")])])]),s("p",[s("strong",[t._v("DERIVED")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("衍生查询，表示在得到最终查询结果之前会用到临时表。例如：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询 ID 为 1 或 2 的老师教授的课程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\tcr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cname \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" course "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" course "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" cr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/8dcf3937462846cc9db55a9d71cc2074.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("对于关联查询，先执行右边的 table（UNION），再执行左边的 table，类型是DERIVED\n")])])]),s("p",[s("strong",[t._v("UNION")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用到了 UNION 查询。同上例。\n")])])]),s("p",[s("strong",[t._v("UNION RESULT")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("主要是显示哪些表之间存在 UNION 查询。<union2,3>代表 id=2 和 id=3 的查询存在 UNION。同上例。\n")])])]),s("h5",{attrs:{id:"_4-3-3-type-连接类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-type-连接类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.3")]),t._v(" "),s("strong",[t._v("type")]),t._v(" "),s("strong",[t._v("连接类型")])]),t._v(" "),s("p",[t._v("https://dev.mysql.com/doc/refman/5.7/en/explain-output.html#explain-join-types")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("所有的连接类型中，上面的最好，越往下越差。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在常用的链接类型中：system > const > eq_ref > ref > range > index > all\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("这 里 并 没 有 列 举 全 部 （ 其 他 ： fulltext 、 ref_or_null 、 index_merger 、unique_subquery、index_subquery）。\n")])])]),s("p",[t._v("以上访问类型除了 all，都能用到索引。")]),t._v(" "),s("p",[s("strong",[t._v("const")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("主键索引或者唯一索引，只能查到一条数据的 SQL。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" single_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" single_data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" single_data\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\tsingle_data a \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("system")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("system 是 const 的一种特例，只有一行满足条件。例如：只有一条数据的系统表。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proxies_priv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/b133a46d7c0a45baac988a9b423fbc43.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("eq_ref")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("通常出现在多表的 join 查询，表示对于前表的每一个结果,，都只能匹配到后表的一行结果。一般是唯一性索引的查询（UNIQUE 或 PRIMARY KEY）。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("eq_ref 是除 const 之外最好的访问类型。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("先删除 teacher 表中多余的数据，teacher_contact 有 3 条数据，teacher 表有 3条数据。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\tteacher \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\ttid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 备份")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'老严'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bobo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seven'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("为 teacher_contact 表的 tcid（第一个字段）创建主键索引。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ALTER TABLE teacher_contact DROP PRIMARY KEY; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" teacher_contact "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tcid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("为 teacher 表的 tcid（第三个字段）创建普通索引。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ALTER TABLE teacher DROP INDEX idx_tcid;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" teacher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" idx_tcid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tcid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("执行以下 SQL 语句：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" teacher t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("teacher_contact tc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tcid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/5ab70b8ea8b84aa39658b35cd54040c3.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("此时的执行计划（teacher_contact 表是 eq_ref）：\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/5a0b5fff92264a3881ef9c37d3767c5b.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("小结：")])]),t._v(" "),s("p",[t._v("以上三种 system，const，eq_ref，都是可遇而不可求的，基本上很难优化到这个状态。")]),t._v(" "),s("p",[s("strong",[t._v("ref")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("查询用到了非唯一性索引，或者关联操作只使用了索引的最左前缀。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("例如：使用 tcid 上的普通索引查询：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" tcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/f9abe8ad9d3f41ba9e494cdccdc54d5d.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("range")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("索引范围扫描。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果 where 后面是 between and 或 <或 > 或 >= 或 <=或 in 这些，type 类型就为 range。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("不走索引一定是全表扫描（ALL），所以先加上普通索引。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ALTER TABLE teacher DROP INDEX idx_tid; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" teacher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" idx_tid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("执行范围查询（字段上有普通索引）：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 或")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/3176ac79a64143b09ce2e7d6ce8baf8f.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("IN 查询也是 range（字段有主键索引）\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher_contact t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tcid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/69faeecb9a3348b5ab48fe7e0589a637.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("index")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Full Index Scan，查询全部索引中的数据（比不走索引要快）。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/5dbe9f936b284cf4b21b28038ec80d5d.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("all")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Full Table Scan，如果没有索引或者没有用到索引，type 就是 ALL。代表全表扫描。\n")])])]),s("p",[s("strong",[t._v("小结：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一般来说，需要保证查询至少达到 range 级别，最好能达到 ref。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ALL（全表扫描）和 index（查询全部索引）都是需要优化的。\n")])])]),s("h5",{attrs:{id:"_4-3-4-possible-key、key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-possible-key、key"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.4")]),t._v(" "),s("strong",[t._v("possible_key、key")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("可能用到的索引和实际用到的索引。如果是 NULL 就代表没有用到索引。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("possible_key 可以有一个或者多个，可能用到索引不代表一定用到索引。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("反过来，possible_key 为空，key 可能有值吗？\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("表上创建联合索引：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" comidx_name_phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" comidx_name_phone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("执行计划（改成 select name 也能用到索引）：\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" phone "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'126'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/f1a15d07c14d4b0596de93922e47be0c.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("结论：是有可能的（这里是覆盖索引的情况）。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果通过分析发现没有用到索引，就要检查 SQL 或者创建索引。\n")])])]),s("h5",{attrs:{id:"_4-3-5-key-len"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-5-key-len"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.5")]),t._v(" "),s("strong",[t._v("key_len")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("索引的长度（使用的字节数）。跟索引字段的类型、长度有关。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("表上有联合索引：KEY\n")])])]),s("p",[s("code",[t._v("comidx_name_phone")]),t._v(" ("),s("code",[t._v("name")]),t._v(","),s("code",[t._v("phone")]),t._v(")")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jim'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"_4-3-6-rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-6-rows"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.6")]),t._v(" "),s("strong",[t._v("rows")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("MySQL 认为扫描多少行才能返回请求的数据，是一个预估值。一般来说行数越少越好。\n")])])]),s("h5",{attrs:{id:"_4-3-7-filtered"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-7-filtered"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.7")]),t._v(" "),s("strong",[t._v("filtered")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("这个字段表示存储引擎返回的数据在 server 层过滤后，剩下多少满足查询的记录数量的比例，它是一个百分比。\n")])])]),s("h5",{attrs:{id:"_4-3-8-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-8-ref"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.8")]),t._v(" "),s("strong",[t._v("ref")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("使用哪个列或者常数和索引一起从表中筛选数据。\n")])])]),s("h5",{attrs:{id:"_4-3-9-extra"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-9-extra"}},[t._v("#")]),t._v(" "),s("strong",[t._v("4.3.9")]),t._v(" "),s("strong",[t._v("Extra")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("执行计划给出的额外的信息说明。\n")])])]),s("p",[s("strong",[t._v("using index")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用到了覆盖索引，不需要回表。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" teacher "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("using where")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("使用了 where 过滤，表示存储引擎返回的记录并不是所有的都满足查询条件，需要在 server 层进行过滤（跟是否使用索引没有关系）。\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" phone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13866667777'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/898782488d8d423ca0f78298c2247074.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("using filesort")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("不能使用索引来排序，用到了额外的排序（跟磁盘或文件没有关系）。需要优化。（复合索引的前提）\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" comidx_name_phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" comidx_name_phone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_innodb "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jim'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("（order by id 引起）\n")])])]),s("p",[s("img",{attrs:{src:"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1463/1650529519068/b3582b8e9ccd472ba8f030638836dd0f.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("using temporary")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("用到了临时表。例如（以下不是全部的情况）：\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、distinct 非索引列\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" teacher t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("2、group by 非索引列\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" teacher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" tname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("3、使用 join 的时候，group 任意列\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" teacher t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" course c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("需要优化，例如创建复合索引。\n")])])]),s("p",[t._v("总结一下：")]),t._v(" "),s("p",[t._v("模拟优化器执行 SQL 查询语句的过程，来知道 MySQL 是怎么处理一条 SQL 语句的。通过这种方式我们可以分析语句或者表的性能瓶颈。")]),t._v(" "),s("p",[t._v("分析出问题之后，就是对 SQL 语句的具体优化。")]),t._v(" "),s("h2",{attrs:{id:"_18-数据库死锁怎么办-你会怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-数据库死锁怎么办-你会怎么处理"}},[t._v("#")]),t._v(" 18.数据库死锁怎么办，你会怎么处理？")]),t._v(" "),s("p",[t._v("数据库死锁是多个事务因互相等待对方释放资源而无法继续执行的阻塞现象。以下是常见死锁场景及处理方案：")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"一、常见死锁场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、常见死锁场景"}},[t._v("#")]),t._v(" "),s("strong",[t._v("一、常见死锁场景")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("交叉资源访问顺序")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("场景")]),t._v(" ：事务A先锁资源X，再请求资源Y；事务B先锁资源Y，再请求资源X。")]),t._v(" "),s("li",[s("strong",[t._v("原因")]),t._v(" ：事务对资源的加锁顺序不一致。")])])]),t._v(" "),s("li",[s("strong",[t._v("长事务占用资源")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("场景")]),t._v(" ：事务A长时间持有锁未提交，事务B等待该锁时自身持有的锁也被其他事务等待。")]),t._v(" "),s("li",[s("strong",[t._v("原因")]),t._v(" ：未及时提交/回滚事务，导致锁长期占用。")])])]),t._v(" "),s("li",[s("strong",[t._v("批量操作锁升级")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("场景")]),t._v(" ：批量更新/删除未走索引，导致行锁升级为表锁，阻塞其他事务。")]),t._v(" "),s("li",[s("strong",[t._v("原因")]),t._v(" ：索引缺失或SQL优化不足，引发全表扫描。")])])]),t._v(" "),s("li",[s("strong",[t._v("间隙锁（Gap Lock）冲突")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("场景")]),t._v(" ：事务A锁定某范围的间隙，事务B尝试插入该范围内的数据。")]),t._v(" "),s("li",[s("strong",[t._v("常见于")]),t._v(" ：MySQL的 "),s("code",[t._v("REPEATABLE READ")]),t._v("隔离级别。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、死锁处理方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、死锁处理方案"}},[t._v("#")]),t._v(" "),s("strong",[t._v("二、死锁处理方案")])]),t._v(" "),s("h4",{attrs:{id:"_1-自动处理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-自动处理机制"}},[t._v("#")]),t._v(" "),s("strong",[t._v("1. 自动处理机制")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("死锁检测")]),t._v("\n数据库（如InnoDB）自动检测死锁，强制回滚代价较小的事务。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SHOW ENGINE INNODB STATUS; -- 查看MySQL死锁日志\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("锁超时设置")]),t._v("\n设置事务等待锁的超时时间，超时后自动回滚。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SET innodb_lock_wait_timeout = 30; -- MySQL设置锁超时时间（秒）\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"_2-代码与设计优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码与设计优化"}},[t._v("#")]),t._v(" "),s("strong",[t._v("2. 代码与设计优化")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("统一资源访问顺序")]),t._v("\n确保所有事务按固定顺序访问资源（如按主键排序更新）。")]),t._v(" "),s("li",[s("strong",[t._v("短事务原则")]),t._v("\n减少事务执行时间，尽快提交或回滚，避免长事务占用锁。")]),t._v(" "),s("li",[s("strong",[t._v("优化SQL与索引")]),t._v(" "),s("ul",[s("li",[t._v("为查询条件添加索引，避免全表扫描。")]),t._v(" "),s("li",[t._v("避免批量操作锁大量数据，分批处理。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("SELECT ... FOR UPDATE")]),t._v("时明确指定索引。")])])]),t._v(" "),s("li",[s("strong",[t._v("降低隔离级别")]),t._v("\n使用 "),s("code",[t._v("READ COMMITTED")]),t._v("代替 "),s("code",[t._v("REPEATABLE READ")]),t._v("，减少间隙锁的使用（需权衡数据一致性）。")])]),t._v(" "),s("h4",{attrs:{id:"_3-程序容错机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-程序容错机制"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3. 程序容错机制")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("重试策略")]),t._v("\n捕获死锁异常（如MySQL的 "),s("code",[t._v("1213")]),t._v("错误码），在代码层重试事务。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import org.springframework.retry.annotation.Backoff;\nimport org.springframework.retry.annotation.Retryable;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class AccountService {\n\n    @Retryable(\n        value = {DeadlockLoserDataAccessException.class}, \n        maxAttempts = 3, \n        backoff = @Backoff(delay = 1000, multiplier = 2)\n    )\n    @Transactional\n    public void transferWithRetry(int fromId, int toId, BigDecimal amount) {\n        // 转账业务逻辑\n        jdbcTemplate.update("UPDATE account SET balance = balance - ? WHERE id = ?", amount, fromId);\n        jdbcTemplate.update("UPDATE account SET balance = balance + ? WHERE id = ?", amount, toId);\n    }\n}\n')])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("乐观锁")]),t._v("\n通过版本号或时间戳避免显式加锁（适用于冲突较少的场景）。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("UPDATE table SET col = new_val, version = version + 1 \nWHERE id = 1 AND version = old_version;\n")])])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"三、排查工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、排查工具"}},[t._v("#")]),t._v(" "),s("strong",[t._v("三、排查工具")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("数据库日志")]),t._v(" "),s("ul",[s("li",[t._v("MySQL："),s("code",[t._v("SHOW ENGINE INNODB STATUS")])]),t._v(" "),s("li",[t._v("PostgreSQL："),s("code",[t._v("pg_locks")]),t._v("视图 + "),s("code",[t._v("deadlock_timeout")]),t._v("参数")])])]),t._v(" "),s("li",[s("strong",[t._v("监控工具")]),t._v(" "),s("ul",[s("li",[t._v("Prometheus + Grafana监控锁等待。")]),t._v(" "),s("li",[t._v("第三方工具（如Percona Toolkit、pt-deadlock-logger）。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("总结")])]),t._v(" "),s("p",[t._v("预防死锁的核心是规范资源访问顺序、优化事务设计。处理时优先依赖数据库的自动回滚机制，并通过日志分析根因。在代码层添加重试逻辑和监控，可显著降低死锁对业务的影响。")]),t._v(" "),s("h2",{attrs:{id:"_21-mysql-innodb-锁的基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-mysql-innodb-锁的基本类型"}},[t._v("#")]),t._v(" 21."),s("strong",[t._v("MySQL InnoDB")]),t._v(" "),s("strong",[t._v("锁的基本类型")])]),t._v(" "),s("p",[s("code",[t._v("官网")]),t._v("：https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html")]),t._v(" "),s("h3",{attrs:{id:"锁的基本模式-共享锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的基本模式-共享锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("锁的基本模式——共享锁")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("第一个行级别的锁就是我们在官网看到的 Shared Locks （共享锁），我们获取了一行数据的读锁以后，可以用来读取数据，所以它也叫做读锁。而且多个事务可以共享一把读锁。那怎么给一行数据加上读锁呢？\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我们可以用 select lock in share mode;的方式手工加上一把读锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("释放锁有两种方式，只要事务结束，锁就会自动事务，包括提交事务和结束事务。\n")])])]),s("h3",{attrs:{id:"锁的基本模式-排它锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的基本模式-排它锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("锁的基本模式——排它锁")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("第二个行级别的锁叫做 Exclusive Locks（排它锁），它是用来操作数据的，所以又叫做写锁。只要一个事务获取了一行数据的排它锁，其他的事务就不能再获取这一行数据的共享锁和排它锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("排它锁的加锁方式有两种，第一种是自动加排他锁，可能是同学们没有注意到的：\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我们在操作数据的时候，包括增删改，都会默认加上一个排它锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("还有一种是手工加锁，我们用一个 FOR UPDATE 给一行数据加上一个排它锁，这个无论是在我们的代码里面还是操作数据的工具里面，都比较常用。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("释放锁的方式跟前面是一样的。\n")])])]),s("h3",{attrs:{id:"锁的基本模式-意向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的基本模式-意向锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("锁的基本模式——意向锁")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("意向锁是由数据库自己维护的。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("也就是说，当我们给一行数据加上共享锁之前，会自动在这张表上面加一个意向共享锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("当我们给一行数据加上排他锁之前，会自动在这张表上面加一个意向排他锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("反过来说：\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果一张表上面至少有一个意向共享锁，说明有其他的事务给其中的某些数据行加上了共享锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果一张表上面至少有一个意向排他锁，说明有其他的事务给其中的某些数据行加上了排他锁。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("那么这两个表级别的锁存在的意义是什么呢？第一个，我们有了表级别的锁，在 InnoDB 里面就可以支持更多粒度的锁。它的第二个作用，我们想一下，如果说没有意向锁的话，当我们准备给一张表加上表锁的时候，我们首先要做什么？是不是必须先要去判断有没其他的事务锁定了其中了某些行？如果有的话，肯定不能加上表锁。那么这个时候我们就要去扫描整张表才能确定能不能成功加上一个表锁，如果数据量特别大，比如有上千万的数据的时候，加表锁的效率是不是很低？\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("但是我们引入了意向锁之后就不一样了。我只要判断这张表上面有没有意向锁，如果有，就直接返回失败。如果没有，就可以加锁成功。所以 InnoDB 里面的表锁，我们可以把它理解成一个标志。就像火车上厕所有没有人使用的灯，是用来提高加锁的效率的。\n")])])]),s("p",[t._v("mysql面试的时候怎么去聊       1天基本的原理     案例    原理")]),t._v(" "),s("p",[t._v("mysql性能优化      中间件     标准    SQL标准  不能执行时间超过1S       业务结合数据库进行的")]),t._v(" "),s("p",[t._v("延迟关联     游标分页   索引分析    覆盖索引")])])}),[],!1,null,null,null);s.default=n.exports}}]);